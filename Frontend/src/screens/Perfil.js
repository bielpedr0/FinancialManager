import './Perfil.css';
import React, { useState, useRef, useEffect } from 'react';
import { useAuth } from '../context/AuthContext';
import { FaPencilAlt, FaCheck } from 'react-icons/fa';

const Perfil = () => {
Â  const { logout, user, updateUser } = useAuth();
Â  const [isEditingName, setIsEditingName] = useState(false);
Â  const [name, setName] = useState('');

Â  // UseEffect para sincronizar o nome do estado local com o do contexto
Â  useEffect(() => {
Â  Â  if (user?.name) {
Â  Â  Â  setName(user.name);
Â  Â  }
Â  }, [user]);

Â  const fileInputRef = useRef(null);

Â  const handlePhotoChange = (e) => {
Â  Â  const file = e.target.files[0];
Â  Â  if (file) {
Â  Â  Â  const photoURL = URL.createObjectURL(file);
Â  Â  Â  // Atualiza o objeto do usuÃ¡rio com a nova foto
Â  Â  Â  updateUser({ photo: photoURL });
Â  Â  }
Â  };

Â  const handleNameSave = () => {
Â  Â  if (name.trim() !== '') {
Â  Â  Â  updateUser({ name }); // Chama a funÃ§Ã£o do contexto para atualizar o nome
Â  Â  Â  setIsEditingName(false);
Â  Â  }
Â  };

Â  // Exibe um carregamento ou mensagem se o usuÃ¡rio nÃ£o estiver disponÃ­vel
Â  if (!user) {
Â  Â  return <div className="page-container">Carregando perfil...</div>;
Â  }

Â  return (
Â  Â  <div className="page-container">
Â  Â  Â  <h2 className="title">Meu Perfil</h2>
Â  Â  Â  <div className="profile-card">
Â  Â  Â  Â  <div className="photo-section">
Â  Â  Â  Â  Â  <div className="photo-circle">
Â  Â  Â  Â  Â  Â  {user.photo ? (
Â  Â  Â  Â  Â  Â  Â  <img src={user.photo} alt="Foto de perfil" className="photo" />
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <span className="placeholder-icon">ðŸ‘¤</span>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  type="file"
Â  Â  Â  Â  Â  Â  ref={fileInputRef}
Â  Â  Â  Â  Â  Â  accept="image/*"
Â  Â  Â  Â  Â  Â  onChange={handlePhotoChange}
Â  Â  Â  Â  Â  Â  style={{ display: 'none' }}
Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  <button onClick={() => fileInputRef.current.click()} className="upload-button">
Â  Â  Â  Â  Â  Â  Alterar Foto
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  <div className="info-section">
Â  Â  Â  Â  Â  <div className="info-group">
Â  Â  Â  Â  Â  Â  <span className="info-label">Nome:</span>
Â  Â  Â  Â  Â  Â  {isEditingName ? (
Â  Â  Â  Â  Â  Â  Â  <div className="edit-input-container">
Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  value={name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setName(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  className="info-input"
Â  Â  Â  Â  Â  Â  Â  Â  Â  onKeyDown={(e) => { if (e.key === 'Enter') handleNameSave(); }}
Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  <button onClick={handleNameSave} className="edit-button">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaCheck />
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  <div className="display-name-container">
Â  Â  Â  Â  Â  Â  Â  Â  <span className="info-value">{user.name}</span>
Â  Â  Â  Â  Â  Â  Â  Â  <button onClick={() => setIsEditingName(true)} className="edit-button">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <FaPencilAlt />
Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="info-group">
Â  Â  Â  Â  Â  Â  <span className="info-label">Email:</span>
Â  Â  Â  Â  Â  Â  <span className="info-value">{user.email}</span>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <div className="info-group">
Â  Â  Â  Â  Â  Â  <span className="info-label">Membro desde:</span>
Â  Â  Â  Â  Â  Â  <span className="info-value">{new Date(user.registeredSince).toLocaleDateString()}</span>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  <button onClick={logout} className="logout-button logout-button-hover">
Â  Â  Â  Â  Â  Â  Sair da Conta
Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default Perfil;